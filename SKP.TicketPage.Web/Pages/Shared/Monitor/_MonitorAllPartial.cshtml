@using SKP.TicketPage.Services
@inject ITicketPageService service
@model int
@{
    var departments = (await service.Department.GetAllAsync()).OrderBy(d => d.Name).ToList();

    if (Model < 0) { throw new ArgumentOutOfRangeException(nameof(Model)); }

    IEnumerable<ITicket> d1Tickets = null;
    IEnumerable<ITicket> d2Tickets = null;
    IEnumerable<ITicket> d3Tickets = null;
    IEnumerable<ITicket> d4Tickets = null;

    if (Model < departments.Count)
    {
        d1Tickets = (await service.Ticket.GetByDepartmentAsync(departments[Model].ID)).Where(t => t.Status != ITicket.TicketStatus.Denied && t.Status != ITicket.TicketStatus.Completed);
    }
    if (Model + 1 < departments.Count)
    {
        d2Tickets = (await service.Ticket.GetByDepartmentAsync(departments[Model + 1].ID)).Where(t => t.Status != ITicket.TicketStatus.Denied && t.Status != ITicket.TicketStatus.Completed);
    }
    if (Model + 2 < departments.Count)
    {
        d3Tickets = (await service.Ticket.GetByDepartmentAsync(departments[Model + 2].ID)).Where(t => t.Status != ITicket.TicketStatus.Denied && t.Status != ITicket.TicketStatus.Completed);
    }
    if (Model + 3 < departments.Count)
    {
        d4Tickets = (await service.Ticket.GetByDepartmentAsync(departments[Model + 3].ID)).Where(t => t.Status != ITicket.TicketStatus.Denied && t.Status != ITicket.TicketStatus.Completed);
    }
}
<div style="overflow:hidden" class="d-sm-block d-md-block d-lg-block col-sm-12 col-md-6 col-lg-3 h-100 cust-tertiary-50 cust-border-primary">
    <h3 class="text-center cust-text-primary">@((Model < departments.Count)?(departments[Model].Name):("Tom"))<span style="vertical-align:middle; font-size:18px;" class="m-0 ml-1 p-0 pl-1 pr-1 text-center border cust-rounded cust-border-tertiary cust-tertiary cust-text-secondary">@d1Tickets?.Count()</span></h3>
    <hr class="cust-border-primary" />
    <div class="pr-3 cust-monitor-container">
        @if (Model < departments.Count)
        {
            foreach (var ticket in d1Tickets)
            {
                <partial name="Tickets/_TicketCardViewPartial" model="ticket" />
            }
        }
    </div>
</div>
<div style="overflow:hidden" class="d-none d-md-block d-lg-block col-md-6 col-lg-3 border-left cust-tertiary-50 cust-border-primary">
    <h3 class="text-center cust-text-primary">@((Model +1 < departments.Count)?(departments[Model + 1].Name):("Tom"))<span style="vertical-align:middle; font-size:18px;" class="m-0 ml-1 p-0 pl-1 pr-1 text-center border cust-rounded cust-border-tertiary cust-tertiary cust-text-secondary">@d2Tickets?.Count()</span></h3>
    <hr class="cust-border-primary" />
    <div class="pr-3 cust-monitor-container">
        @if (Model + 1 < departments.Count)
        {
            foreach (var ticket in d2Tickets)
            {

                <partial name="Tickets/_TicketCardViewPartial" model="ticket" />
            }
        }
    </div>
</div>
<div style="overflow:hidden" class="d-none d-lg-block col-lg-3 border-left cust-tertiary-50 cust-border-primary">
    <h3 class="text-center cust-text-primary">@((Model + 2 < departments.Count)?(departments[Model + 2].Name):("Tom"))<span style="vertical-align:middle; font-size:18px;" class="m-0 ml-1 p-0 pl-1 pr-1 text-center border cust-rounded cust-border-tertiary cust-tertiary cust-text-secondary">@d3Tickets?.Count()</span></h3>
    <hr class="cust-border-primary" />
    <div class="pr-3 cust-monitor-container">
        @if (Model + 2 < departments.Count)
        {
            foreach (var ticket in d3Tickets)
            {
                <partial name="Tickets/_TicketCardViewPartial" model="ticket" />
            }
        }
    </div>
</div>
<div style="overflow:hidden" class="d-none d-lg-block col-lg-3 border-left cust-tertiary-50 cust-border-primary">
    <h3 class="text-center cust-text-primary">@((Model + 3 < departments.Count)?(departments[Model + 3].Name):("Tom"))<span style="vertical-align:middle; font-size:18px;" class="m-0 ml-1 p-0 pl-1 pr-1 text-center border cust-rounded cust-border-tertiary cust-tertiary cust-text-secondary">@d4Tickets?.Count()</span></h3>
    <hr class="cust-border-primary" />
    <div class="pr-3 cust-monitor-container">
        @if (Model + 3 < departments.Count)
        {
            foreach (var ticket in d4Tickets)
            {
                <partial name="Tickets/_TicketCardViewPartial" model="ticket" />
            }
        }
    </div>
</div>
